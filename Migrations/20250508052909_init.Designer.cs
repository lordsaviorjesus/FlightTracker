// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using flight_tracker.Data;

#nullable disable

namespace flight_tracker.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250508052909_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("flight_tracker.EfCore.FlightRecord_ef", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double?>("baroaltitude")
                        .HasColumnType("double precision");

                    b.Property<string>("callsign")
                        .HasColumnType("text");

                    b.Property<int?>("category")
                        .HasColumnType("integer");

                    b.Property<double?>("geoaltitude")
                        .HasColumnType("double precision");

                    b.Property<string>("icao24")
                        .HasColumnType("text");

                    b.Property<long?>("lastcontact")
                        .HasColumnType("bigint");

                    b.Property<double?>("latitude")
                        .HasColumnType("double precision");

                    b.Property<double?>("longitude")
                        .HasColumnType("double precision");

                    b.Property<bool?>("onground")
                        .HasColumnType("boolean");

                    b.Property<string>("origincountry")
                        .HasColumnType("text");

                    b.Property<int?>("positionsource")
                        .HasColumnType("integer");

                    b.Property<int[]>("sensors")
                        .HasColumnType("integer[]");

                    b.Property<bool?>("spi")
                        .HasColumnType("boolean");

                    b.Property<string>("squawk")
                        .HasColumnType("text");

                    b.Property<long?>("timeposition")
                        .HasColumnType("bigint");

                    b.Property<double?>("truetrack")
                        .HasColumnType("double precision");

                    b.Property<double?>("velocity")
                        .HasColumnType("double precision");

                    b.Property<double?>("verticalrate")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("FlightRecords_EF");
                });
#pragma warning restore 612, 618
        }
    }
}
